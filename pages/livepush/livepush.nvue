<template>
	<div>
		<view :style="{ width: width + 'px', height: height + 'px' }" v-if="markact" class="mark"><text class="mark-text">直播启动中...</text></view>
		<view>
			<view @click="returns" class="arrow-box"><text class="jiesu">结束直播</text></view>
			<view class="arrow-boxs">
				<image class="user-img" src="http://shop.dadanyipin.com/static/logo.png"></image>
				<view>
					<text class="text-box">8 关注</text>
				</view>
			</view>

			<live-pusher :beauty="beauty" :style="{ width: width + 'px', height: height + 'px' }" id="livePusher" :url="url" mode="FHD"></live-pusher>

			<!-- 这是聊天室 -->
			<view class="chat" v-if="false">
				<scroll-view :scroll-top="scrollTop" scroll-y="true" class="scroll-Y" @scrolltoupper="upper" @scrolltolower="lower" @scroll="scroll">
					<view class="chat-list" v-for="(it, i) in chatList" :key="i">
						<text class="chat-username">{{ it.name }}：</text>
						<text class="chat-usertext">{{ it.text }}</text>
					</view>
				</scroll-view>
			</view>

			<!-- 这是功能按钮 -->
			<view :style="{ width: width + 'px' }" class="but">
				<view @click="openMark(0)" class="meiyanbut">
					<image class="but-img" src="../../static/zhiboshop.png"></image>
					<text class="but-text">宝贝</text>
				</view>
				<view @click="openmeiyan" class="meiyanbut">
					<image class="but-img" src="../../static/meiyan.png"></image>
					<text v-if="beauty == 0" class="but-text">开启美颜</text>
					<text v-if="beauty == 9" class="but-text">关闭美颜</text>
				</view>
				<view @click="switchCamera" class="meiyanbut">
					<image class="but-img" src="../../static/qiehuan.png"></image>
					<text class="but-text">切换摄像头</text>
				</view>
			</view>
		</view>
	</div>
</template>

<script>
import { host, post, get, toLogin } from '@/common/util.js';
import permision from '@/common/permission.js';
import uniPopup from '@/components/uni-popup/uni-popup.vue';
export default {
	components: {
		uniPopup
	},
	data() {
		return {
			type: '',
			width: '',
			height: '',
			liveUserId: '',
			liveToken: '',
			url: '', //这是推流地址
			// url:"rtmp://push.wtvxin.com/live/shop_7qi?txSecret=2929449e8ef493a47615e6c2e6cf9bc1&txTime=5E99FC49",
			enableCamera: false,
			context: null,
			markact: true,
			arr: [],
			scrollTop: '',
			chatList: [
				{
					name: '用户01',
					text: '哈哈哈哈哈'
				}
			],
			beauty: 0
		};
	},
	onShow() {
		let res = uni.getSystemInfoSync();
		this.width = res.windowWidth;
		this.height = res.windowHeight;
		this.liveUserId = uni.getStorageSync('liveUserId');
		this.liveToken = uni.getStorageSync('liveToken');
		//权限设置,获取权限后开启直播
		this.getPlay();
		this.quanxian();
	},
	methods: {
		async quanxian() {
			switch (uni.getSystemInfoSync().platform) {
				case 'android':
					var result = await permision.requestAndroidPermission('android.permission.CAMERA');
					var res = await permision.requestAndroidPermission('android.permission.RECORD_AUDIO');
					console.log(res, 123456);
					var strStatus;
					if(result == 1 && res == 1){//已经获取授权开始直播
						console.log("开始直播")
						this.getPlay();
					}else if (result == 1 && res !== 1) {
						uni.showToast({
							title: '麦克风未授权',
							icon: 'none',
							success() {
								// permision.gotoAppPermissionSetting();
							}
						});
						this.stopLive();
					} else if (result == 0) {
						uni.showToast({
							title: '摄像头未授权',
							icon: 'none',
							success() {
								// permision.gotoAppPermissionSetting();
							}
						});
						this.stopLive();
					} else if (result == -1) {
						this.stopLive();
						uni.showToast({
							title: '被永久拒绝权限',
							icon: 'none',
							success() {
								
							}
						});
						setTimeout(function(){
							uni.switchTab ({
								url:'../tabBar/my/my'
							})
						},1500)
					}

					break;

				case 'ios':
					var iosresult = await permision.judgeIosPermission('camera');
					var iosres = await permision.judgeIosPermission('record');
					console.log('运行iOS上');
					var strStatus;
					if(iosresult&& iosres){//已经获取授权开始直播
						console.log("开始直播")
						this.getPlay();
					}else if ((!iosres)&&(!iosresult)) {
						uni.showToast({
							title: '请先开启摄像头和麦克风权限后再开启直播！',
							icon: 'none',
							success() {
								// permision.gotoAppPermissionSetting();
							}
						});
						this.stopLive();
					} else if (!iosresult) {
						uni.showToast({
							title: '摄像机未授权',
							icon: 'none', 
							success() {
								// permision.gotoAppPermissionSetting();
							}
						});
						this.stopLive();
					}else{
						uni.showToast({
							title: '麦克风未授权',
							icon: 'none',
							success() {
								// permision.gotoAppPermissionSetting();
							}
						});
						this.stopLive();
					}
					break;
			}
		},
		async getPlay() {
			console.log(this.liveUserId,this.liveToken)
			let res = await post('TencentCloud/PushURL', {
				push: '',
				UserId: this.liveUserId,
				Token: this.liveToken
			});
			if (res.code == 0) {
				this.url = res.data.RTMP;
				this.context = uni.createLivePusherContext('livePusher', this);
				setTimeout(() => {
					this.startLive();
				}, 1000);
			} else {
				uni.setStorageSync('liveToken', '');
				uni.setStorageSync('liveUserId', '');
				uni.showToast({
					title: '请重新登录商家直播账号!',
					icon: 'none',
					duration: 2000
				});
				setTimeout(function() {
					uni.navigateBack({});
				}, 2000);
			}
			console.log(res);
		},
		add() {
			console.log('s');
		},
		// 0是宝贝弹窗,1是订单弹窗,2是工具弹窗,3是设置弹窗
		openMark(type) {
			this.type == type;
			this.$refs.popup.open();
		},
		openmeiyan() {
			if (this.beauty == 0) {
				this.beauty = 9;
			} else {
				this.beauty = 0;
			}
		},
		returns() {
			this.stopLive();
			uni.navigateBack({
				delta: 1
			});
		},
		EnableCamera() {
			this.enableCamera = true;
		},
		startLive() {
			let _this = this;
			console.log(this);
			this.context.start({
				success: a => {
					_this.markact = false;
					console.log('livePusher.start:' + JSON.stringify(a));
				}
			});
		},
		stopLive() {
			this.context.stop({
				success: a => {
					console.log(JSON.stringify(a));
				}
			});
		},
		switchCamera() {
			this.context.switchCamera({
				success: a => {
					console.log('livePusher.switchCamera:' + JSON.stringify(a));
				}
			});
		}
	}
};
</script>

<style>
.add-shop {
	font-size: 16px;
	color: #333333;
	position: absolute;
	top: 20px;
	left: 20px;
	z-index: 10;
}
.shop-list-but-box {
	position: absolute;
	bottom: 10px;
	right: 20px;
	display: flex;
	align-items: center;
	justify-content: flex-end;
	flex-direction: row;
}
.shop-list-but {
	color: white;
	border-radius: 2px;
	font-size: 16px;
	background-color: #d4237a;
	padding: 10px 20px 10px 20px;
}
.mark-title {
	padding-top: 20px;
	padding-bottom: 20px;
	text-align: center;
	font-size: 20px;
}
.shop-list-img {
	margin-right: 10px;
	width: 100px;
	height: 100px;
}
.shop-list-title {
	font-size: 20px;
	color: #333333;
}
.shop-list-num {
	font-size: 16px;
	color: #c0c0c0;
	padding-top: 10px;
}
.shop-list-price {
	font-size: 16px;
	color: #d4237a;
	padding-top: 10px;
}
.scroll-Ys {
	background-color: white;
	height: 300px;
	width: 100%;
}
.shop-list-box {
	position: relative;
	background-color: white;
	width: 100%;
	height: 380px;
}
.shop-list-list {
	position: relative;
	padding-top: 5px;
	padding-bottom: 5px;
	display: flex;
	align-items: flex-start;
	flex-direction: row;
}
.chat-username {
	font-size: 28upx;
	color: white;
}
.chat-usertext {
	font-size: 28upx;
	color: white;
}
.chat-list {
	margin-top: 5px;
	display: flex;
	align-items: center;
	justify-content: flex-start;
	flex-direction: row;
	background-color: rgba(0, 0, 0, 0.5);
	padding: 5px 10px 5px 10px;
	border-radius: 3px;
}
.scroll-Y {
	height: 150px;
	width: 250px;
}
.chat {
	position: fixed;
	z-index: 10;
	bottom: 80px;
}

.but-img {
	width: 20px;
	height: 20px;
}

.meiyanbut {
	flex: 1;
	padding: 10px 20px 10px 20px;
	/* margin-left: 20px; */
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
}

.but-text {
	padding-top: 3px;
	font-size: 13px;
	color: white;
}

.text-box {
	font-size: 12px;
	color: white;
}

.user-img {
	margin-right: 16upx;
	width: 50upx;
	height: 50upx;
	border-radius: 50%;
}

.mark-text {
	color: white;
	font-size: 20px;
}

.mark {
	position: fixed;
	top: 0px;
	background-color: #000000;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
}

.but {
	background-color: rgba(0, 0, 0, 0.4);
	position: fixed;
	bottom: 0px;
	display: flex;
	align-items: center;
	flex-direction: row;
	border: none;
}

.tui {
	width: 200px;
	height: 200px;
}

.arrow-box {
	position: fixed;
	top: 60upx;
	left: 40upx;
	z-index: 10;
	border-radius: 20px;
	background-color: rgba(0, 0, 0, 0.4);
}

.arrow-boxs {
	padding: 10upx 20upx;
	display: flex;
	align-items: center;
	flex-direction: row;
	position: fixed;
	top: 60upx;
	right: 40upx;
	z-index: 10;
	border-radius: 30px;
	background-color: rgba(0, 0, 0, 0.4);
}

.jiesu {
	padding: 20upx;
	color: white;
	font-size: 28upx;
}

.arrow {
	width: 15px;
	height: 15px;
}
</style>
